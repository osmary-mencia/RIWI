"""
ğŸ”¹ Parte 1: def â†’ Funciones normales
ğŸ“Œ Â¿QuÃ© es una funciÃ³n? Una funciÃ³n es un bloque de cÃ³digo que se puede usar cuando lo necesites, 
en vez de repetir lo mismo varias veces.
"""
print("\nâœ¨ Sintaxis bÃ¡sica:\n")

def saludar():
    print("Â¡Hola, Osmary!")

saludar()  # Llama a la funciÃ³n

print('\nâœ… FunciÃ³n con parÃ¡metros:\n')

def saludar_persona(nombre):
    print(f"Â¡Hola, {nombre}!")

saludar_persona("Ana")
saludar_persona("Luis")

print('\nâœ… FunciÃ³n que devuelve algo (return):\n')

def sumar(a, b):
    return a + b

resultado = sumar(3, 5)
print(resultado)  # Imprime 8

print('\nğŸ”¹ Parte 2: lambda â†’ Funciones anÃ³nimas, mÃ¡s cortas\n')
#Una funciÃ³n lambda es como una funciÃ³n rÃ¡pida, sin nombre, para cosas simples.
print('âœ¨ Sintaxis bÃ¡sica:\n')
sumar = lambda a, b: a + b
print(sumar(3, 4))  # Resultado: 7

print('\nEs igual a:\n')

def sumar(a, b):
    return a + b

print('\nâš¡ Uso comÃºn: con map, filter, sorted\n')

numeros = [1, 2, 3, 4, 5]
cuadrados = list(map(lambda x: x ** 2, numeros))
print(cuadrados)  # [1, 4, 9, 16, 25]
